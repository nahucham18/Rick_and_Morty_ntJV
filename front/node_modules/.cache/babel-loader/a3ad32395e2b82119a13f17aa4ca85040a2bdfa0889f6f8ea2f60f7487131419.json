{"ast":null,"code":"const validation = userData => {\n  let errors = {};\n  if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(userData.username)) {\n    errors.username = 'El email es invalido';\n  }\n  if (!userData.username) {\n    errors.username = 'No tiene que estar vacio';\n  }\n  if (userData.username.length > 35) {\n    errors.username = 'No puede tener mas de 35 caracteres';\n  }\n  return errors;\n};\nexport default validation;","map":{"version":3,"names":["validation","userData","errors","test","username","length"],"sources":["C:/Users/nahuc/OneDrive/Escritorio/Rick and Morty JV/rick_and_morty_jv/src/components/Form/Validation.js"],"sourcesContent":["const validation = (userData) =>{\r\n        let errors = {};\r\n\r\n        if(!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(userData.username)){\r\n            errors.username = 'El email es invalido';}\r\n\r\n        if(!userData.username){errors.username = 'No tiene que estar vacio'}\r\n\r\n        if(userData.username.length > 35){errors.username = 'No puede tener mas de 35 caracteres'}\r\n\r\n        \r\n        \r\n\r\n        return errors;\r\n}\r\nexport default validation;"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,QAAQ,IAAI;EACxB,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,IAAG,CAAC,4BAA4B,CAACC,IAAI,CAACF,QAAQ,CAACG,QAAQ,CAAC,EAAC;IACrDF,MAAM,CAACE,QAAQ,GAAG,sBAAsB;EAAC;EAE7C,IAAG,CAACH,QAAQ,CAACG,QAAQ,EAAC;IAACF,MAAM,CAACE,QAAQ,GAAG,0BAA0B;EAAA;EAEnE,IAAGH,QAAQ,CAACG,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAC;IAACH,MAAM,CAACE,QAAQ,GAAG,qCAAqC;EAAA;EAKzF,OAAOF,MAAM;AACrB,CAAC;AACD,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}